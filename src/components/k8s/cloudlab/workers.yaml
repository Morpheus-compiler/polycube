- hosts: master
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- hosts: workers
  become: yes
  tasks:
    - name: remove swap
      shell: "swapoff -a"

    - name: join cluster	
      shell: "{{ hostvars['master'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt

- hosts: master
  become: yes
  tasks:
    - name: add node label
      shell: "/local/label-worker-nodes.sh >> label_worker_nodes.txt"
      args:
        chdir: $HOME
        creates: label_worker_nodes.txt

- hosts: all
  become: yes
  tasks:
    - name: use local ips
      shell: "{{ local_ip_path | default('/local/') }}use-local-ips.sh {{ hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2] }} >> node_local_ip.txt"
      args:
        chdir: $HOME
        creates: node_local_ip.txt

- hosts: all
  become: yes
  tasks:
    - name: Disable HT
      shell: "{{ disable_ht | default('/local/') }}disable_ht.sh >> disable_ht.txt"
      args:
        chdir: $HOME
        creates: disable_ht.txt

- hosts: all
  gather_facts: false
  become: true
  vars:
    sysctl_config:
      # allow testing with buffers up to 1024MB
      net.core.rmem_max: 1073741824 
      net.core.wmem_max: 1073741824 
      # increase Linux autotuning TCP buffer limit to 64MB
      net.ipv4.tcp_rmem: 4096 87380 67108864
      net.ipv4.tcp_wmem: 4096 65536 67108864
      # recommended default congestion control is htcp 
      net.ipv4.tcp_congestion_control: htcp
      # recommended for hosts with jumbo frames enabled
      net.ipv4.tcp_mtu_probing: 1
      # recommended to enable 'fair queueing'
      net.core.default_qdisc: fq

  tasks:
   - name: Change sysctl-settings
     sysctl:
       name: '{{ item.key }}'
       value: '{{ item.value }}'
       sysctl_set: yes
       state: present
       reload: yes
       ignoreerrors: yes
     with_dict: '{{ sysctl_config }}'