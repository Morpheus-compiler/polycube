/**
* katran API generated from katran.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "VipBase.h"
#include "../Katran.h"


VipBase::VipBase(Katran &parent)
    : parent_(parent) {}

VipBase::~VipBase() {}

void VipBase::update(const VipJsonObject &conf) {

  if (conf.flagsIsSet()) {
    setFlags(conf.getFlags());
  }
  if (conf.realIsSet()) {
    for (auto &i : conf.getReal()) {
      auto ip = i.getIp();
      auto m = getReal(ip);
      m->update(i);
    }
  }
}

VipJsonObject VipBase::toJsonObject() {
  VipJsonObject conf;

  conf.setAddress(getAddress());
  conf.setPort(getPort());
  conf.setProto(getProto());
  conf.setFlags(getFlags());
  for(auto &i : getRealList()) {
    conf.addVipReal(i->toJsonObject());
  }

  return conf;
}
void VipBase::addRealList(const std::vector<VipRealJsonObject> &conf) {
  for (auto &i : conf) {
    std::string ip_ = i.getIp();
    addReal(ip_, i);
  }
}

void VipBase::replaceReal(const std::string &ip, const VipRealJsonObject &conf) {
  delReal(ip);
  std::string ip_ = conf.getIp();
  addReal(ip_, conf);
}

void VipBase::delRealList() {
  auto elements = getRealList();
  for (auto &i : elements) {
    std::string ip_ = i->getIp();
    delReal(ip_);
  }
}

std::shared_ptr<spdlog::logger> VipBase::logger() {
  return parent_.logger();
}

