/**
* katran API generated from katran.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/GeneralStatsBase.h"

#include "BalancerStructs.h"


class Katran;

using namespace polycube::service::model;

class GeneralStats : public GeneralStatsBase {
 public:
  GeneralStats(Katran &parent, const GeneralStatsJsonObject &conf);
  virtual ~GeneralStats();

  /// <summary>
  /// V1 Stats
  /// </summary>
  uint64_t getV1() override;

  /// <summary>
  /// V2 Stats
  /// </summary>
  uint64_t getV2() override;

  GeneralStatsGetVipStatsOutputJsonObject getVipStats(GeneralStatsGetVipStatsInputJsonObject input) override;
  GeneralStatsGetLruStatsOutputJsonObject getLruStats() override;
  GeneralStatsGetLruMissStatsOutputJsonObject getLruMissStats() override;
  GeneralStatsGetLruFallbackStatsOutputJsonObject getLruFallbackStats() override;
  GeneralStatsGetIcmpTooBigStatsOutputJsonObject getIcmpTooBigStats() override;

  static uint8_t vipStatsInputToProtocolNumer(const GeneralStatsGetVipStatsInputProtoEnum &proto);

  private:
  katran::lb_stats getLbStats(uint32_t position, const std::string& map = "stats");
};
