/**
* katran API generated from katran.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* VipRealJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"


namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  VipRealJsonObject : public JsonObjectBase {
public:
  VipRealJsonObject();
  VipRealJsonObject(const nlohmann::json &json);
  ~VipRealJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// IP address of the backend server of the pool
  /// </summary>
  std::string getIp() const;
  void setIp(std::string value);
  bool ipIsSet() const;

  /// <summary>
  /// Weight of the backend in the pool
  /// </summary>
  uint16_t getWeight() const;
  void setWeight(uint16_t value);
  bool weightIsSet() const;
  void unsetWeight();

  /// <summary>
  /// Flags used in the Reals
  /// </summary>
  uint32_t getFlags() const;
  void setFlags(uint32_t value);
  bool flagsIsSet() const;
  void unsetFlags();

private:
  std::string m_ip;
  bool m_ipIsSet;
  uint16_t m_weight;
  bool m_weightIsSet;
  uint32_t m_flags;
  bool m_flagsIsSet;
};

}
}
}

