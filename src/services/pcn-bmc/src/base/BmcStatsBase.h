/**
* bmc API generated from bmc.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* BmcStatsBase.h
*
*
*/

#pragma once

#include "../serializer/BmcStatsJsonObject.h"
#include "../serializer/BmcStatsResetAllOutputJsonObject.h"

#include "../serializer/BmcStatsGetPktCountOutputJsonObject.h"
#include "../serializer/BmcStatsGetPktCountInputJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Bmc;

class BmcStatsBase {
 public:
  
  BmcStatsBase(Bmc &parent);
  
  virtual ~BmcStatsBase();
  virtual void update(const BmcStatsJsonObject &conf);
  virtual BmcStatsJsonObject toJsonObject();

  /// <summary>
  /// Number of GET command received
  /// </summary>
  virtual uint32_t getGetRecvCount() = 0;

  /// <summary>
  /// Number of SET command received
  /// </summary>
  virtual uint32_t getSetRecvCount() = 0;

  /// <summary>
  /// Number of GET command reply analyzed
  /// </summary>
  virtual uint32_t getGetRespCount() = 0;

  /// <summary>
  /// Number of keys that were expected to hit but did not (either because of a hash colision or a race with an invalidation/update)
  /// </summary>
  virtual uint32_t getHitMisprediction() = 0;

  /// <summary>
  /// Number of HIT in kernel cache
  /// </summary>
  virtual uint32_t getHitCount() = 0;

  /// <summary>
  /// Number of MISS in kernel cache
  /// </summary>
  virtual uint32_t getMissCount() = 0;

  /// <summary>
  /// Number of kernel cache updates
  /// </summary>
  virtual uint32_t getUpdateCount() = 0;

  /// <summary>
  /// Number of kernel cache entry invalidated
  /// </summary>
  virtual uint32_t getInvalidationCount() = 0;
  virtual BmcStatsResetAllOutputJsonObject resetAll() = 0;
  virtual BmcStatsGetPktCountOutputJsonObject getPktCount(BmcStatsGetPktCountInputJsonObject input) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Bmc &parent_;
};
