/**
* bmc API generated from bmc.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "BmcStatsGetPktCountInputJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

BmcStatsGetPktCountInputJsonObject::BmcStatsGetPktCountInputJsonObject() {
  m_timeIsSet = false;
}

BmcStatsGetPktCountInputJsonObject::BmcStatsGetPktCountInputJsonObject(const nlohmann::json &val) :
  JsonObjectBase(val) {
  m_timeIsSet = false;


  if (val.count("time")) {
    setTime(val.at("time").get<uint32_t>());
  }
}

nlohmann::json BmcStatsGetPktCountInputJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  if (m_timeIsSet) {
    val["time"] = m_time;
  }

  return val;
}

uint32_t BmcStatsGetPktCountInputJsonObject::getTime() const {
  return m_time;
}

void BmcStatsGetPktCountInputJsonObject::setTime(uint32_t value) {
  m_time = value;
  m_timeIsSet = true;
}

bool BmcStatsGetPktCountInputJsonObject::timeIsSet() const {
  return m_timeIsSet;
}

void BmcStatsGetPktCountInputJsonObject::unsetTime() {
  m_timeIsSet = false;
}


}
}
}

